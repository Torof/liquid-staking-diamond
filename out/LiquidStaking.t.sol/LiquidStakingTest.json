{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_numOfWeeks",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_averageAPR",
          "type": "uint256"
        }
      ],
      "name": "AverageAPR",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "_sent",
          "type": "bool"
        }
      ],
      "name": "Claimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DECIMALS_PRESERVATION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claim",
      "outputs": [
        {
          "internalType": "bool",
          "name": "claimed",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "displayReward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "reward",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "displayStakeTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "st",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "openShangai",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_weekReward",
          "type": "uint256"
        }
      ],
      "name": "pushWeekReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stake",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "staking",
      "outputs": [
        {
          "internalType": "contract LiquidStaking",
          "name": "_ls",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testStaking",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testUnstaking",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "unstake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "users",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "totalUserStake",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "initTime",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "weeklyAPR",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x6000805460ff1916600117905560c060405260036080908152623137b160e91b60a0526200002d90620001a0565b601e80546001600160a01b0319166001600160a01b0392909216919091179055604080518082019091526005815264616c69636560d81b60208201526200007490620001a0565b601f80546001600160a01b0319166001600160a01b0392909216919091179055604080518082019091526003815262746f6d60e81b6020820152620000b990620001a0565b602060006101000a8154816001600160a01b0302191690836001600160a01b031602179055506200010c604051806040016040528060048152602001631b585d1d60e21b815250620001a060201b60201c565b602180546001600160a01b0319166001600160a01b03929092169190911790553480156200013957600080fd5b50604051806040016040528060078152602001660e2ead2c88aa8960cb1b815250604051806040016040528060048152602001630e28aa8960e31b815250816016908162000188919062000378565b50601762000197828262000378565b505050620004fe565b6000620001ad82620001b4565b5092915050565b60008082604051602001620001ca91906200046a565b60408051808303601f190181529082905280516020909101206001625e79b760e01b03198252600482018190529150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ffa1864990602401602060405180830381865afa15801562000236573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200025c919062000488565b6040516318caf8e360e31b8152909250737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c657c718906200029a9085908790600401620004ba565b600060405180830381600087803b158015620002b557600080fd5b505af1158015620002ca573d6000803e3d6000fd5b50505050915091565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620002fe57607f821691505b6020821081036200031f57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200037357600081815260208120601f850160051c810160208610156200034e5750805b601f850160051c820191505b818110156200036f578281556001016200035a565b5050505b505050565b81516001600160401b03811115620003945762000394620002d3565b620003ac81620003a58454620002e9565b8462000325565b602080601f831160018114620003e45760008415620003cb5750858301515b600019600386901b1c1916600185901b1785556200036f565b600085815260208120601f198616915b828110156200041557888601518255948401946001909101908401620003f4565b5085821015620004345787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60005b838110156200046157818101518382015260200162000447565b50506000910152565b600082516200047e81846020870162000444565b9190910192915050565b6000602082840312156200049b57600080fd5b81516001600160a01b0381168114620004b357600080fd5b9392505050565b60018060a01b03831681526040602082015260008251806040840152620004e981606085016020870162000444565b601f01601f1916919091016060019392505050565b6138c3806200050e6000396000f3fe608060405260043610620001c25760003560e01c8063877a10bb11620000ff578063b38399361162000095578063dd08f0a6116200006c578063dd08f0a61462000541578063dd62ed3e1462000559578063e89768d3146200057e578063fa7626d414620005a357600080fd5b8063b383993614620004bc578063ba414fa61462000510578063c52a33b7146200052857600080fd5b8063a38abb8211620000d6578063a38abb8214620003ff578063a457c2d71462000424578063a87430ba1462000449578063a9059cbb146200049757600080fd5b8063877a10bb14620003a157806395d89b4114620003c25780639d9ed8c314620003da57600080fd5b80632e17de7811620001755780633a4b66f1116200014c5780633a4b66f1146200033b5780634e71d92d14620003455780635b86570e146200035d57806370a08231146200036757600080fd5b80632e17de7814620002d3578063313ce56714620002f857806339509351146200031657600080fd5b806306fdde0314620001cf578063095ea7b314620001ff5780630a9254e4146200023557806318160ddd146200024f5780631dbb2a22146200027057806323b872dd14620002ae57600080fd5b36620001ca57005b600080fd5b348015620001dc57600080fd5b50620001e7620005bf565b604051620001f69190620020ce565b60405180910390f35b3480156200020c57600080fd5b50620002246200021e3660046200211b565b62000659565b6040519015158152602001620001f6565b3480156200024257600080fd5b506200024d62000675565b005b3480156200025c57600080fd5b506015545b604051908152602001620001f6565b3480156200027d57600080fd5b50620002956200028f36600462002148565b620006c3565b6040516001600160a01b039091168152602001620001f6565b348015620002bb57600080fd5b5062000224620002cd36600462002162565b62000907565b348015620002e057600080fd5b506200024d620002f236600462002148565b6200092f565b3480156200030557600080fd5b5060405160128152602001620001f6565b3480156200032357600080fd5b5062000224620003353660046200211b565b62000ae1565b6200024d62000b09565b3480156200035257600080fd5b506200022462000b7c565b6200024d62000b8e565b3480156200037457600080fd5b506200026162000386366004620021a3565b6001600160a01b031660009081526013602052604090205490565b348015620003ae57600080fd5b506200024d601a805460ff19166001179055565b348015620003cf57600080fd5b50620001e762000ce4565b348015620003e757600080fd5b5062000261620003f936600462002148565b62000cf5565b3480156200040c57600080fd5b50620002616200041e366004620021a3565b62000d17565b3480156200043157600080fd5b5062000224620004433660046200211b565b62000d54565b3480156200045657600080fd5b506200048162000468366004620021a3565b601c602052600090815260409020805460019091015482565b60408051928352602083019190915201620001f6565b348015620004a457600080fd5b5062000224620004b63660046200211b565b62000dd5565b348015620004c957600080fd5b506200024d620004db36600462002148565b601b80546001810182556000919091527f3ad8aa4f87544323a9d1e5dd902f40c356527a7955687113db5f9a85ad579dc10155565b3480156200051d57600080fd5b506200022462000de5565b3480156200053557600080fd5b5062000261620f424081565b3480156200054e57600080fd5b506200024d62000f1a565b3480156200056657600080fd5b506200026162000578366004620021c8565b6200152d565b3480156200058b57600080fd5b50620002616200059d366004620021a3565b62001558565b348015620005b057600080fd5b50600054620002249060ff1681565b606060168054620005d09062002200565b80601f0160208091040260200160405190810160405280929190818152602001828054620005fe9062002200565b80156200064f5780601f1062000623576101008083540402835291602001916200064f565b820191906000526020600020905b8154815290600101906020018083116200063157829003601f168201915b5050505050905090565b6000336200066981858562001580565b60019150505b92915050565b60405162000683906200209a565b604051809103906000f080158015620006a0573d6000803e3d6000fd5b50601d80546001600160a01b0319166001600160a01b0392909216919091179055565b6000620006d982670de0b6b3a764000062002252565b601e54909250737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c88a5e6d906001600160a01b03166200071885670de0b6b3a76400006200226c565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b1580156200075f57600080fd5b505af115801562000774573d6000803e3d6000fd5b5050601e5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063ca669fa79150602401600060405180830381600087803b158015620007d257600080fd5b505af1158015620007e7573d6000803e3d6000fd5b50505050601d60009054906101000a90046001600160a01b03169050806001600160a01b0316633a4b66f1678ac7230489e800006040518263ffffffff1660e01b81526004016000604051808303818588803b1580156200084757600080fd5b505af11580156200085c573d6000803e3d6000fd5b5050601e5460408051818152600a9181019190915269626f6242616c616e636560b01b60608201526001600160a01b039091163160208201526000805160206200386e83398151915293506080019150620008b49050565b60405180910390a160408051818152600f818301526e636f6e747261637442616c616e636560881b606082015247602082015290516000805160206200386e8339815191529181900360800190a1919050565b60003362000917858285620016a8565b6200092485858562001729565b506001949350505050565b601a5460ff166200097e5760405162461bcd60e51b81526020600482015260146024820152731cda185b99d85a481b9bdd081c995b19585cd95960621b60448201526064015b60405180910390fd5b336000908152601c60205260408120546200099b90839062002282565b1015620009d75760405162461bcd60e51b8152602060048201526009602482015268756e646572666c6f7760b81b604482015260640162000975565b336000908152601c602052604081208054839290620009f890849062002282565b9091555062000a0a90503382620018dc565b600062000a1662000b7c565b90508062000a555760405162461bcd60e51b815260206004820152600b60248201526a1b9bdd0818db185a5b595960aa1b604482015260640162000975565b604051600090339084908381818185875af1925050503d806000811462000a99576040519150601f19603f3d011682016040523d82523d6000602084013e62000a9e565b606091505b505090508062000adc5760405162461bcd60e51b81526020600482015260086024820152671b9bdd081cd95b9d60c21b604482015260640162000975565b505050565b6000336200066981858562000af783836200152d565b62000b0391906200226c565b62001580565b62000b15333462001a14565b336000908152601c60205260408120805434929062000b369084906200226c565b92505081905550346018600082825462000b5191906200226c565b9091555050336000908152601c6020526040812054900362000b7a5762000b783362001ada565b505b565b600062000b893362001ada565b905090565b600062000b9c600a620006c3565b601e546040516370a0823160e01b81526001600160a01b0391821660048201529192506000805160206200386e83398151915291908316906370a0823190602401602060405180830381865afa15801562000bfb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000c21919062002298565b60405162000c5791906040808252600b908201526a3137b12130b630b731b29960a91b6060820152602081019190915260800190565b60405180910390a1601e546040516370a0823160e01b81526001600160a01b03918216600482015262000b78918316906370a08231906024015b602060405180830381865afa15801562000caf573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000cd5919062002298565b678ac7230489e8000062001c0c565b606060178054620005d09062002200565b601b818154811062000d0657600080fd5b600091825260209091200154905081565b6001600160a01b0381166000908152601c6020908152604080832081518083019092528054825260010154918101919091526200066f9062001d15565b6000338162000d6482866200152d565b90508381101562000dc65760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840162000975565b62000924828686840362001580565b6000336200066981858562001729565b60008054610100900460ff161562000e065750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1562000f155760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909162000e97917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001620022b2565b60408051601f198184030181529082905262000eb391620022e5565b6000604051808303816000865af19150503d806000811462000ef2576040519150601f19603f3d011682016040523d82523d6000602084013e62000ef7565b606091505b509150508080602001905181019062000f11919062002303565b9150505b919050565b600062000f28600a620006c3565b601e546040516370a0823160e01b81526001600160a01b03918216600482015291925062000f6391908316906370a082319060240162000c91565b60005b601c81101562000fe557601d546040516359c1cc9b60e11b81526101c260048201526001600160a01b039091169063b383993690602401600060405180830381600087803b15801562000fb857600080fd5b505af115801562000fcd573d6000803e3d6000fd5b505050508062000fdd9062002327565b905062000f66565b5062000ff46249d40062001dcc565b806001600160a01b031663877a10bb6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200103057600080fd5b505af115801562001045573d6000803e3d6000fd5b505050506200105762b8920062001dcc565b601e5460405163e89768d360e01b81526001600160a01b0391821660048201526000805160206200386e8339815191529183169063e89768d390602401602060405180830381865afa158015620010b2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620010d8919062002298565b6040516200110b9190604080825260089082015267323ab930ba34b7b760c11b6060820152602081019190915260800190565b60405180910390a1601d54601e5460405163e89768d360e01b81526001600160a01b0391821660048201526000805160206200386e8339815191529262093a8092169063e89768d390602401602060405180830381865afa15801562001175573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200119b919062002298565b620011a7919062002343565b604051620011dc91906040808252600a90820152696e756d4f667765656b7360b01b6060820152602081019190915260800190565b60405180910390a1601e546040516351c55dc160e11b81526001600160a01b0391821660048201526000805160206200386e8339815191529183169063a38abb8290602401602060405180830381865afa1580156200123f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001265919062002298565b604051620012999190604080825260099082015268189bd894995dd85c9960ba1b6060820152602081019190915260800190565b60405180910390a1601e546040516370a0823160e01b81526001600160a01b039182166004820152620012d8918316906370a082319060240162000c91565b601e5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b1580156200133257600080fd5b505af115801562001347573d6000803e3d6000fd5b50506040516305c2fbcf60e31b8152678ac7230489e8000060048201526001600160a01b0384169250632e17de789150602401600060405180830381600087803b1580156200139557600080fd5b505af1158015620013aa573d6000803e3d6000fd5b5050601e546040516370a0823160e01b81526001600160a01b0391821660048201526000805160206200386e833981519152935090841691506370a0823190602401602060405180830381865afa1580156200140a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001430919062002298565b604051620014649190604080825260099082015268189bd894995dd85c9960ba1b6060820152602081019190915260800190565b60405180910390a1601e546040516370a0823160e01b81526001600160a01b039182166004820152620014e9918316906370a0823190602401602060405180830381865afa158015620014bb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620014e1919062002298565b600062001c0c565b601e546040516001600160a01b039091163181527f2cab9790510fd8bdfbd2115288db33fec66691d476efc5427cfd4c09693017559060200160405180910390a150565b6001600160a01b03918216600090815260146020908152604080832093909416825291909152205490565b6001600160a01b0381166000908152601c60205260408120600101546200066f904262002282565b6001600160a01b038316620015e45760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840162000975565b6001600160a01b038216620016475760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840162000975565b6001600160a01b0383811660008181526014602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000620016b684846200152d565b90506000198114620017235781811015620017145760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640162000975565b62001723848484840362001580565b50505050565b6001600160a01b0383166200178f5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840162000975565b6001600160a01b038216620017f35760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840162000975565b6001600160a01b038316600090815260136020526040902054818110156200186d5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840162000975565b6001600160a01b0380851660008181526013602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90620018ce9086815260200190565b60405180910390a362001723565b6001600160a01b0382166200193e5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840162000975565b6001600160a01b03821660009081526013602052604090205481811015620019b45760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840162000975565b6001600160a01b03831660008181526013602090815260408083208686039055601580548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b6001600160a01b03821662001a6c5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640162000975565b806015600082825462001a8091906200226c565b90915550506001600160a01b0382166000818152601360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35b5050565b6001600160a01b0381166000908152601c602090815260408083208151808301909252805482526001015491810191909152819062001b199062001d15565b6001600160a01b0384166000818152601c6020526040808220426001820155829055519293509183908381818185875af1925050503d806000811462001b7c576040519150601f19603f3d011682016040523d82523d6000602084013e62001b81565b606091505b505090508062001bc55760405162461bcd60e51b815260206004820152600e60248201526d195d1a195c881b9bdd081cd95b9d60921b604482015260640162000975565b817f09df812ba7188e56719168c531ec106e5e6b42706ff8a7f54c8033b4c93acef78260405162001bfa911515815260200190565b60405180910390a25060019392505050565b80821462001ad6577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405162001c7f9060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a160408051818152600a81830152690808115e1c1958dd195960b21b60608201526020810183905290516000805160206200386e8339815191529181900360800190a160408051818152600a8183015269080808081058dd1d585b60b21b60608201526020810184905290516000805160206200386e8339815191529181900360800190a162001ad662001e48565b60008082602001514262001d2a919062002282565b1162001d5f5760405162461bcd60e51b815260206004820152600360248201526237bb3360e91b604482015260640162000975565b600082602001514262001d73919062002282565b9050600062001d828262001f5b565b9050816301dfe200620f424083876000015162001da0919062002252565b62001dac919062002343565b62001db8919062002343565b62001dc4919062002252565b949350505050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d63e5d6bf0262001df283426200226c565b6040518263ffffffff1660e01b815260040162001e1191815260200190565b600060405180830381600087803b15801562001e2c57600080fd5b505af115801562001e41573d6000803e3d6000fd5b5050505050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1562001f4a5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f198184030181529082905262001ee59291602001620022b2565b60408051601f198184030181529082905262001f0191620022e5565b6000604051808303816000865af19150503d806000811462001f40576040519150601f19603f3d011682016040523d82523d6000602084013e62001f45565b606091505b505050505b6000805461ff001916610100179055565b601b5460009062001fa05760405162461bcd60e51b815260206004820152600e60248201526d195b5c1d1e48105414881b1a5cdd60921b604482015260640162000975565b600062001fb162093a808462002343565b601b54909150811462001ff95760405162461bcd60e51b815260206004820152600f60248201526e0d8cadccee8d040dad2e6dac2e8c6d608b1b604482015260640162000975565b601b54600090816200200c848362002282565b905060005b826200201e83836200226c565b10156200207357601b6200203383836200226c565b8154811062002046576200204662002366565b9060005260206000200154846200205e91906200226c565b93506200206b8162002327565b905062002011565b508362002084620f42408562002252565b62002090919062002343565b9695505050505050565b6114f1806200237d83390190565b60005b83811015620020c5578181015183820152602001620020ab565b50506000910152565b6020815260008251806020840152620020ef816040850160208701620020a8565b601f01601f19169190910160400192915050565b80356001600160a01b038116811462000f1557600080fd5b600080604083850312156200212f57600080fd5b6200213a8362002103565b946020939093013593505050565b6000602082840312156200215b57600080fd5b5035919050565b6000806000606084860312156200217857600080fd5b620021838462002103565b9250620021936020850162002103565b9150604084013590509250925092565b600060208284031215620021b657600080fd5b620021c18262002103565b9392505050565b60008060408385031215620021dc57600080fd5b620021e78362002103565b9150620021f76020840162002103565b90509250929050565b600181811c908216806200221557607f821691505b6020821081036200223657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176200066f576200066f6200223c565b808201808211156200066f576200066f6200223c565b818103818111156200066f576200066f6200223c565b600060208284031215620022ab57600080fd5b5051919050565b6001600160e01b0319831681528151600090620022d7816004850160208701620020a8565b919091016004019392505050565b60008251620022f9818460208701620020a8565b9190910192915050565b6000602082840312156200231657600080fd5b81518015158114620021c157600080fd5b6000600182016200233c576200233c6200223c565b5060010190565b6000826200236157634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fdfe60806040523480156200001157600080fd5b50604051806040016040528060078152602001660e2ead2c88aa8960cb1b815250604051806040016040528060048152602001630e28aa8960e31b81525081600390816200006091906200011d565b5060046200006f82826200011d565b505050620001e9565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620000a357607f821691505b602082108103620000c457634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200011857600081815260208120601f850160051c81016020861015620000f35750805b601f850160051c820191505b818110156200011457828155600101620000ff565b5050505b505050565b81516001600160401b0381111562000139576200013962000078565b62000151816200014a84546200008e565b84620000ca565b602080601f831160018114620001895760008415620001705750858301515b600019600386901b1c1916600185901b17855562000114565b600085815260208120601f198616915b82811015620001ba5788860151825594840194600190910190840162000199565b5085821015620001d95787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6112f880620001f96000396000f3fe60806040526004361061012e5760003560e01c8063877a10bb116100ab578063a87430ba1161006f578063a87430ba14610319578063a9059cbb14610362578063b383993614610382578063c52a33b7146103d2578063dd62ed3e146103e9578063e89768d31461040957600080fd5b8063877a10bb1461028557806395d89b41146102a45780639d9ed8c3146102b9578063a38abb82146102d9578063a457c2d7146102f957600080fd5b8063313ce567116100f2578063313ce567146101f657806339509351146102125780633a4b66f1146102325780634e71d92d1461023a57806370a082311461024f57600080fd5b806306fdde031461013a578063095ea7b31461016557806318160ddd1461019557806323b872dd146101b45780632e17de78146101d457600080fd5b3661013557005b600080fd5b34801561014657600080fd5b5061014f610429565b60405161015c91906110a6565b60405180910390f35b34801561017157600080fd5b50610185610180366004611110565b6104bb565b604051901515815260200161015c565b3480156101a157600080fd5b506002545b60405190815260200161015c565b3480156101c057600080fd5b506101856101cf36600461113a565b6104d5565b3480156101e057600080fd5b506101f46101ef366004611176565b6104f9565b005b34801561020257600080fd5b506040516012815260200161015c565b34801561021e57600080fd5b5061018561022d366004611110565b61069a565b6101f46106bc565b34801561024657600080fd5b50610185610726565b34801561025b57600080fd5b506101a661026a36600461118f565b6001600160a01b031660009081526020819052604090205490565b34801561029157600080fd5b506101f46007805460ff19166001179055565b3480156102b057600080fd5b5061014f610736565b3480156102c557600080fd5b506101a66102d4366004611176565b610745565b3480156102e557600080fd5b506101a66102f436600461118f565b610766565b34801561030557600080fd5b50610185610314366004611110565b6107a1565b34801561032557600080fd5b5061034d61033436600461118f565b6009602052600090815260409020805460019091015482565b6040805192835260208301919091520161015c565b34801561036e57600080fd5b5061018561037d366004611110565b61081c565b34801561038e57600080fd5b506101f461039d366004611176565b600880546001810182556000919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b3480156103de57600080fd5b506101a6620f424081565b3480156103f557600080fd5b506101a66104043660046111b1565b61082a565b34801561041557600080fd5b506101a661042436600461118f565b610855565b606060038054610438906111e4565b80601f0160208091040260200160405190810160405280929190818152602001828054610464906111e4565b80156104b15780601f10610486576101008083540402835291602001916104b1565b820191906000526020600020905b81548152906001019060200180831161049457829003601f168201915b5050505050905090565b6000336104c981858561087b565b60019150505b92915050565b6000336104e385828561099f565b6104ee858585610a19565b506001949350505050565b60075460ff166105475760405162461bcd60e51b81526020600482015260146024820152731cda185b99d85a481b9bdd081c995b19585cd95960621b60448201526064015b60405180910390fd5b33600090815260096020526040812054610562908390611234565b101561059c5760405162461bcd60e51b8152602060048201526009602482015268756e646572666c6f7760b81b604482015260640161053e565b33600090815260096020526040812080548392906105bb908490611234565b909155506105cb90503382610bbd565b60006105d5610726565b9050806106125760405162461bcd60e51b815260206004820152600b60248201526a1b9bdd0818db185a5b595960aa1b604482015260640161053e565b604051600090339084908381818185875af1925050503d8060008114610654576040519150601f19603f3d011682016040523d82523d6000602084013e610659565b606091505b50509050806106955760405162461bcd60e51b81526020600482015260086024820152671b9bdd081cd95b9d60c21b604482015260640161053e565b505050565b6000336104c98185856106ad838361082a565b6106b79190611247565b61087b565b6106c63334610cef565b33600090815260096020526040812080543492906106e5908490611247565b9250508190555034600560008282546106fe9190611247565b90915550503360009081526009602052604081205490036107245761072233610dae565b505b565b600061073133610dae565b905090565b606060048054610438906111e4565b6008818154811061075557600080fd5b600091825260209091200154905081565b6001600160a01b038116600090815260096020908152604080832081518083019092528054825260010154918101919091526104cf90610ed9565b600033816107af828661082a565b90508381101561080f5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161053e565b6104ee828686840361087b565b6000336104c9818585610a19565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0381166000908152600960205260408120600101546104cf9042611234565b6001600160a01b0383166108dd5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161053e565b6001600160a01b03821661093e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161053e565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006109ab848461082a565b90506000198114610a135781811015610a065760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161053e565b610a13848484840361087b565b50505050565b6001600160a01b038316610a7d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161053e565b6001600160a01b038216610adf5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161053e565b6001600160a01b03831660009081526020819052604090205481811015610b575760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161053e565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610a13565b6001600160a01b038216610c1d5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161053e565b6001600160a01b03821660009081526020819052604090205481811015610c915760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161053e565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b6001600160a01b038216610d455760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161053e565b8060026000828254610d579190611247565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b038116600090815260096020908152604080832081518083019092528054825260010154918101919091528190610deb90610ed9565b6001600160a01b038416600081815260096020526040808220426001820155829055519293509183908381818185875af1925050503d8060008114610e4c576040519150601f19603f3d011682016040523d82523d6000602084013e610e51565b606091505b5050905080610e935760405162461bcd60e51b815260206004820152600e60248201526d195d1a195c881b9bdd081cd95b9d60921b604482015260640161053e565b817f09df812ba7188e56719168c531ec106e5e6b42706ff8a7f54c8033b4c93acef782604051610ec7911515815260200190565b60405180910390a25060019392505050565b600080826020015142610eec9190611234565b11610f1f5760405162461bcd60e51b815260206004820152600360248201526237bb3360e91b604482015260640161053e565b6000826020015142610f319190611234565b90506000610f3e82610f80565b9050816301dfe200620f4240838760000151610f5a919061125a565b610f649190611271565b610f6e9190611271565b610f78919061125a565b949350505050565b600854600090610fc35760405162461bcd60e51b815260206004820152600e60248201526d195b5c1d1e48105414881b1a5cdd60921b604482015260640161053e565b6000610fd262093a8084611271565b60085490915081146110185760405162461bcd60e51b815260206004820152600f60248201526e0d8cadccee8d040dad2e6dac2e8c6d608b1b604482015260640161053e565b600854600090816110298483611234565b905060005b826110398383611247565b101561108357600861104b8383611247565b8154811061105b5761105b611293565b9060005260206000200154846110719190611247565b935061107c816112a9565b905061102e565b5083611092620f42408561125a565b61109c9190611271565b9695505050505050565b600060208083528351808285015260005b818110156110d3578581018301518582016040015282016110b7565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461110b57600080fd5b919050565b6000806040838503121561112357600080fd5b61112c836110f4565b946020939093013593505050565b60008060006060848603121561114f57600080fd5b611158846110f4565b9250611166602085016110f4565b9150604084013590509250925092565b60006020828403121561118857600080fd5b5035919050565b6000602082840312156111a157600080fd5b6111aa826110f4565b9392505050565b600080604083850312156111c457600080fd5b6111cd836110f4565b91506111db602084016110f4565b90509250929050565b600181811c908216806111f857607f821691505b60208210810361121857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b818103818111156104cf576104cf61121e565b808201808211156104cf576104cf61121e565b80820281158282048414176104cf576104cf61121e565b60008261128e57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b6000600182016112bb576112bb61121e565b506001019056fea26469706673582212202d3d19f17a69732ea0e705cf7c031483921953c8c6203f2f107cb677e072934e64736f6c63430008110033b2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8a26469706673582212207688a941ba0ebf41aea6972b192c35ecda73af9a7007b17e0bda740092a61a6364736f6c63430008110033",
    "sourceMap": "1572:26:1:-:0;;;-1:-1:-1;;1572:26:1;1594:4;1572:26;;;238:15:22;145:2118;238:15;;145:2118;238:15;;;-1:-1:-1;;;238:15:22;;;;:8;:15::i;:::-;224:29;;;-1:-1:-1;;;;;;224:29:22;-1:-1:-1;;;;;224:29:22;;;;;;;;;;275:17;;;;;;;;;;;;-1:-1:-1;;;275:17:22;;;;;;:8;:17::i;:::-;259:33;;;-1:-1:-1;;;;;;259:33:22;-1:-1:-1;;;;;259:33:22;;;;;;;;;;312:15;;;;;;;;;;;;-1:-1:-1;;;312:15:22;;;;;;:8;:15::i;:::-;298:29;;;;;;;-1:-1:-1;;;;;298:29:22;;;;;-1:-1:-1;;;;;298:29:22;;;;;;348:16;;;;;;;;;;;;;;-1:-1:-1;;;348:16:22;;;:8;;;:16;;:::i;:::-;333:31;;;-1:-1:-1;;;;;;333:31:22;-1:-1:-1;;;;;333:31:22;;;;;;;;;;145:2118;;;;;;;;;;1976:113:15;;;;;;;;;;;;;-1:-1:-1;;;1976:113:15;;;;;;;;;;;;;;;;-1:-1:-1;;;1976:113:15;;;2050:5;2042;:13;;;;;;:::i;:::-;-1:-1:-1;2065:7:15;:17;2075:7;2065;:17;:::i;:::-;;1976:113;;145:2118:22;;15314:125:5;15378:12;15412:20;15427:4;15412:14;:20::i;:::-;-1:-1:-1;15402:30:5;15314:125;-1:-1:-1;;15314:125:5:o;15033:242::-;15103:12;15117:18;15195:4;15178:22;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;15178:22:5;;;;;;;15168:33;;15178:22;15168:33;;;;-1:-1:-1;;;;;;15219:19:5;;;;;3430:25:23;;;15168:33:5;-1:-1:-1;15219:7:5;;;;3403:18:23;;15219:19:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15248:20;;-1:-1:-1;;;15248:20:5;;15212:26;;-1:-1:-1;15248:8:5;;;;:20;;15212:26;;15263:4;;15248:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15033:242;;;:::o;14:127:23:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:23;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:23;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:23;;;2580:26;2531:89;-1:-1:-1;;1335:1:23;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:23;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:23;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:23;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:23:o;2735:250::-;2820:1;2830:113;2844:6;2841:1;2838:13;2830:113;;;2920:11;;;2914:18;2901:11;;;2894:39;2866:2;2859:10;2830:113;;;-1:-1:-1;;2977:1:23;2959:16;;2952:27;2735:250::o;2990:289::-;3121:3;3159:6;3153:13;3175:66;3234:6;3229:3;3222:4;3214:6;3210:17;3175:66;:::i;:::-;3257:16;;;;;2990:289;-1:-1:-1;;2990:289:23:o;3466:290::-;3536:6;3589:2;3577:9;3568:7;3564:23;3560:32;3557:52;;;3605:1;3602;3595:12;3557:52;3631:16;;-1:-1:-1;;;;;3676:31:23;;3666:42;;3656:70;;3722:1;3719;3712:12;3656:70;3745:5;3466:290;-1:-1:-1;;;3466:290:23:o;3761:493::-;3967:1;3963;3958:3;3954:11;3950:19;3942:6;3938:32;3927:9;3920:51;4007:2;4002;3991:9;3987:18;3980:30;3901:4;4039:6;4033:13;4082:6;4077:2;4066:9;4062:18;4055:34;4098:79;4170:6;4165:2;4154:9;4150:18;4145:2;4137:6;4133:15;4098:79;:::i;:::-;4238:2;4217:15;-1:-1:-1;;4213:29:23;4198:45;;;;4245:2;4194:54;;3761:493;-1:-1:-1;;;3761:493:23:o;:::-;145:2118:22;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "145:2118:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98:15;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4431:197;;;;;;;;;;-1:-1:-1;4431:197:15;;;;;:::i;:::-;;:::i;:::-;;;1272:14:23;;1265:22;1247:41;;1235:2;1220:18;4431:197:15;1107:187:23;371:219:22;;;;;;;;;;;;;:::i;:::-;;3242:106:15;;;;;;;;;;-1:-1:-1;3329:12:15;;3242:106;;;1445:25:23;;;1433:2;1418:18;3242:106:15;1299:177:23;596:358:22;;;;;;;;;;-1:-1:-1;596:358:22;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1859:32:23;;;1841:51;;1829:2;1814:18;596:358:22;1666:232:23;5190:286:15;;;;;;;;;;-1:-1:-1;5190:286:15;;;;;:::i;:::-;;:::i;1042:524:0:-;;;;;;;;;;-1:-1:-1;1042:524:0;;;;;:::i;:::-;;:::i;3091:91:15:-;;;;;;;;;;-1:-1:-1;3091:91:15;;3173:2;2378:36:23;;2366:2;2351:18;3091:91:15;2236:184:23;5871:234:15;;;;;;;;;;-1:-1:-1;5871:234:15;;;;;:::i;:::-;;:::i;1614:239:0:-;;;:::i;1859:92::-;;;;;;;;;;;;;:::i;960:197:22:-;;;:::i;3406:125:15:-;;;;;;;;;;-1:-1:-1;3406:125:15;;;;;:::i;:::-;-1:-1:-1;;;;;3506:18:15;3480:7;3506:18;;;:9;:18;;;;;;;3406:125;2341:63:0;;;;;;;;;;;;2383:7;:14;;-1:-1:-1;;2383:14:0;2393:4;2383:14;;;2341:63;2365:102:15;;;;;;;;;;;;;:::i;543:23:0:-;;;;;;;;;;-1:-1:-1;543:23:0;;;;;:::i;:::-;;:::i;4430:128::-;;;;;;;;;;-1:-1:-1;4430:128:0;;;;;:::i;:::-;;:::i;6592:427:15:-;;;;;;;;;;-1:-1:-1;6592:427:15;;;;;:::i;:::-;;:::i;573:37:0:-;;;;;;;;;;-1:-1:-1;573:37:0;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;2790:25:23;;;2846:2;2831:18;;2824:34;;;;2763:18;573:37:0;2616:248:23;3727:189:15;;;;;;;;;;-1:-1:-1;3727:189:15;;;;;:::i;:::-;;:::i;2187:95:0:-;;;;;;;;;;-1:-1:-1;2187:95:0;;;;;:::i;:::-;2248:9;:27;;;;;;;-1:-1:-1;2248:27:0;;;;;;;2187:95;1819:584:1;;;;;;;;;;;;;:::i;421:54:0:-;;;;;;;;;;;;466:9;421:54;;1360:896:22;;;;;;;;;;;;;:::i;3974:149:15:-;;;;;;;;;;-1:-1:-1;3974:149:15;;;;;:::i;:::-;;:::i;4564:132:0:-;;;;;;;;;;-1:-1:-1;4564:132:0;;;;;:::i;:::-;;:::i;1572:26:1:-;;;;;;;;;;-1:-1:-1;1572:26:1;;;;;;;;2154:98:15;2208:13;2240:5;2233:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;:::o;4431:197::-;4514:4;719:10:21;4568:32:15;719:10:21;4584:7:15;4593:6;4568:8;:32::i;:::-;4617:4;4610:11;;;4431:197;;;;;:::o;371:219:22:-;412:19;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;407:2:22;:24;;-1:-1:-1;;;;;;407:24:22;-1:-1:-1;;;;;407:24:22;;;;;;;;;;371:219::o;596:358::-;643:17;681;:7;691;681:17;:::i;:::-;716:3;;671:27;;-1:-1:-1;708:7:22;;;;-1:-1:-1;;;;;716:3:22;722:17;671:27;732:7;722:17;:::i;:::-;708:33;;-1:-1:-1;;;;;;708:33:22;;;;;;;-1:-1:-1;;;;;4146:32:23;;;708:33:22;;;4128:51:23;4195:18;;;4188:34;4101:18;;708:33:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;760:3:22;;751:13;;-1:-1:-1;;;751:13:22;;-1:-1:-1;;;;;760:3:22;;;751:13;;;1841:51:23;751:8:22;;-1:-1:-1;751:8:22;;-1:-1:-1;1814:18:23;;751:13:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;780:2;;;;;;;;;-1:-1:-1;;;;;780:2:22;774:8;;792:3;-1:-1:-1;;;;;792:9:22;;809:8;792:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;864:3:22;;835:41;;;4653:21:23;;;4710:2;4690:18;;;4683:30;;;;-1:-1:-1;;;4744:2:23;4729:18;;4722:40;-1:-1:-1;;;;;864:3:22;;;:11;4829:4:23;4814:20;;4807:36;-1:-1:-1;;;;;;;;;;;835:41:22;-1:-1:-1;4794:3:23;4779:19;;-1:-1:-1;835:41:22;;-1:-1:-1;4441:408:23;835:41:22;;;;;;;;891:56;;;5066:21:23;;;5123:2;5103:18;;;5096:30;-1:-1:-1;;;5157:2:23;5142:18;;5135:45;925:21:22;5247:4:23;5232:20;;5225:36;891:56:22;;-1:-1:-1;;;;;;;;;;;891:56:22;;;;5212:3:23;891:56:22;;;596:358;;;:::o;5190:286:15:-;5317:4;719:10:21;5373:38:15;5389:4;719:10:21;5404:6:15;5373:15;:38::i;:::-;5421:27;5431:4;5437:2;5441:6;5421:9;:27::i;:::-;-1:-1:-1;5465:4:15;;5190:286;-1:-1:-1;;;;5190:286:15:o;1042:524:0:-;1100:7;;;;1092:40;;;;-1:-1:-1;;;1092:40:0;;5474:2:23;1092:40:0;;;5456:21:23;5513:2;5493:18;;;5486:30;-1:-1:-1;;;5532:18:23;;;5525:50;5592:18;;1092:40:0;;;;;;;;;1179:10;1219:1;1173:17;;;:5;:17;;;;;:32;:42;;1208:7;;1173:42;:::i;:::-;:47;;1165:69;;;;-1:-1:-1;;;1165:69:0;;5956:2:23;1165:69:0;;;5938:21:23;5995:1;5975:18;;;5968:29;-1:-1:-1;;;6013:18:23;;;6006:39;6062:18;;1165:69:0;5754:332:23;1165:69:0;1273:10;1267:17;;;;:5;:17;;;;;:43;;1303:7;;1267:17;:43;;1303:7;;1267:43;:::i;:::-;;;;-1:-1:-1;1320:26:0;;-1:-1:-1;1326:10:0;1338:7;1320:5;:26::i;:::-;1356:12;1371:7;:5;:7::i;:::-;1356:22;;1396:7;1388:31;;;;-1:-1:-1;;;1388:31:0;;6293:2:23;1388:31:0;;;6275:21:23;6332:2;6312:18;;;6305:30;-1:-1:-1;;;6351:18:23;;;6344:41;6402:18;;1388:31:0;6091:335:23;1388:31:0;1467:35;;1452:9;;1467:10;;1490:7;;1452:9;1467:35;1452:9;1467:35;1490:7;1467:10;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1451:51;;;1520:4;1512:25;;;;-1:-1:-1;;;1512:25:0;;6843:2:23;1512:25:0;;;6825:21:23;6882:1;6862:18;;;6855:29;-1:-1:-1;;;6900:18:23;;;6893:38;6948:18;;1512:25:0;6641:331:23;1512:25:0;1082:484;;1042:524;:::o;5871:234:15:-;5959:4;719:10:21;6013:64:15;719:10:21;6029:7:15;6066:10;6038:25;719:10:21;6029:7:15;6038:9;:25::i;:::-;:38;;;;:::i;:::-;6013:8;:64::i;1614:239:0:-;1658:28;1664:10;1676:9;1658:5;:28::i;:::-;1702:10;1696:17;;;;:5;:17;;;;;:45;;1732:9;;1696:17;:45;;1732:9;;1696:45;:::i;:::-;;;;;;;;1766:9;1751:11;;:24;;;;;;;:::i;:::-;;;;-1:-1:-1;;1795:10:0;1789:17;;;;:5;:17;;;;;:32;:37;;1785:61;;1828:18;1835:10;1828:6;:18::i;:::-;;1785:61;1614:239::o;1859:92::-;1892:12;1926:18;1933:10;1926:6;:18::i;:::-;1916:28;;1859:92;:::o;960:197:22:-;1007:17;1027:11;1035:2;1027:7;:11::i;:::-;1097:3;;1083:18;;-1:-1:-1;;;1083:18:22;;-1:-1:-1;;;;;1097:3:22;;;1083:18;;;1841:51:23;1007:31:22;;-1:-1:-1;;;;;;;;;;;;1053:49:22;1083:13;;;;;;1814:18:23;;1083::22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1053:49;;;;;7396:2:23;7378:21;;;7435:2;7415:18;;;7408:30;-1:-1:-1;;;7469:2:23;7454:18;;7447:41;7555:4;7540:20;;7533:36;;;;7520:3;7505:19;;7166:409;1053:49:22;;;;;;;;1135:3;;1121:18;;-1:-1:-1;;;1121:18:22;;-1:-1:-1;;;;;1135:3:22;;;1121:18;;;1841:51:23;1112:38:22;;1121:13;;;;;1814:18:23;;1121::22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1141:8;1112;:38::i;2365:102:15:-;2421:13;2453:7;2446:14;;;;;:::i;543:23:0:-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;543:23:0;:::o;4430:128::-;-1:-1:-1;;;;;4538:12:0;;4489:11;4538:12;;;:5;:12;;;;;;;;4521:30;;;;;;;;;;;;;;;;;;;;;;;;:16;:30::i;6592:427:15:-;6685:4;719:10:21;6685:4:15;6766:25;719:10:21;6783:7:15;6766:9;:25::i;:::-;6739:52;;6829:15;6809:16;:35;;6801:85;;;;-1:-1:-1;;;6801:85:15;;7782:2:23;6801:85:15;;;7764:21:23;7821:2;7801:18;;;7794:30;7860:34;7840:18;;;7833:62;-1:-1:-1;;;7911:18:23;;;7904:35;7956:19;;6801:85:15;7580:401:23;6801:85:15;6920:60;6929:5;6936:7;6964:15;6945:16;:34;6920:8;:60::i;3727:189::-;3806:4;719:10:21;3860:28:15;719:10:21;3877:2:15;3881:6;3860:9;:28::i;1819:584:1:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:1;;;;;;;;1819:584::o;1869:528::-;1941:17;2990:42;2978:55;3059:16;1980:374;;2196:43;;;1671:64;2196:43;;;4128:51:23;;;-1:-1:-1;;;4195:18:23;;;4188:34;2196:43:1;;;;;;;;;4101:18:23;;;2196:43:1;;;-1:-1:-1;;1671:64:1;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:1;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:1:o;1360:896:22:-;1404:17;1424:11;1432:2;1424:7;:11::i;:::-;1468:3;;1454:18;;-1:-1:-1;;;1454:18:22;;-1:-1:-1;;;;;1468:3:22;;;1454:18;;;1841:51:23;1404:31:22;;-1:-1:-1;1445:38:22;;1454:13;;;;;;1814:18:23;;1454::22;1666:232:23;1445:38:22;1497:6;1493:71;1509:2;1505:1;:6;1493:71;;;1531:2;;:22;;-1:-1:-1;;;1531:22:22;;1549:3;1531:22;;;1445:25:23;-1:-1:-1;;;;;1531:2:22;;;;:17;;1418:18:23;;1531:22:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1513:3;;;;:::i;:::-;;;1493:71;;;;1573:13;1578:7;1573:4;:13::i;:::-;1596:3;-1:-1:-1;;;;;1596:15:22;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1623:14;1628:8;1623:4;:14::i;:::-;1699:3;;1678:25;;-1:-1:-1;;;1678:25:22;;-1:-1:-1;;;;;1699:3:22;;;1678:25;;;1841:51:23;-1:-1:-1;;;;;;;;;;;1652:52:22;1678:20;;;;;1814:18:23;;1678:25:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1652:52;;;;;9790:2:23;9772:21;;;9829:1;9809:18;;;9802:29;-1:-1:-1;;;9862:2:23;9847:18;;9840:38;9945:4;9930:20;;9923:36;;;;9910:3;9895:19;;9560:405;1652:52:22;;;;;;;;1747:2;;1767:3;;1747:24;;-1:-1:-1;;;1747:24:22;;-1:-1:-1;;;;;1767:3:22;;;1747:24;;;1841:51:23;-1:-1:-1;;;;;;;;;;;1719:63:22;1774:7;;1747:2;;:19;;1814:18:23;;1747:24:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:34;;;;:::i;:::-;1719:63;;;;;10422:2:23;10404:21;;;10461:2;10441:18;;;10434:30;-1:-1:-1;;;10495:2:23;10480:18;;10473:40;10580:4;10565:20;;10558:36;;;;10545:3;10530:19;;10192:408;1719:63:22;;;;;;;;1843:3;;1825:22;;-1:-1:-1;;;1825:22:22;;-1:-1:-1;;;;;1843:3:22;;;1825:22;;;1841:51:23;-1:-1:-1;;;;;;;;;;;1797:51:22;1825:17;;;;;1814:18:23;;1825:22:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1797:51;;;;;10835:2:23;10817:21;;;10874:1;10854:18;;;10847:29;-1:-1:-1;;;10907:2:23;10892:18;;10885:39;10991:4;10976:20;;10969:36;;;;10956:3;10941:19;;10605:406;1797:51:22;;;;;;;;1881:3;;1867:18;;-1:-1:-1;;;1867:18:22;;-1:-1:-1;;;;;1881:3:22;;;1867:18;;;1841:51:23;1858:38:22;;1867:13;;;;;1814:18:23;;1867::22;1666:232:23;1858:38:22;1915:3;;1906:13;;-1:-1:-1;;;1906:13:22;;-1:-1:-1;;;;;1915:3:22;;;1906:13;;;1841:51:23;1906:8:22;;;;1814:18:23;;1906:13:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1929:21:22;;-1:-1:-1;;;1929:21:22;;1941:8;1929:21;;;1445:25:23;-1:-1:-1;;;;;1929:11:22;;;-1:-1:-1;1929:11:22;;-1:-1:-1;1418:18:23;;1929:21:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2007:3:22;;1993:18;;-1:-1:-1;;;1993:18:22;;-1:-1:-1;;;;;2007:3:22;;;1993:18;;;1841:51:23;-1:-1:-1;;;;;;;;;;;1965:47:22;-1:-1:-1;1993:13:22;;;;-1:-1:-1;1993:13:22;;1814:18:23;;1993::22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1965:47;;;;;10835:2:23;10817:21;;;10874:1;10854:18;;;10847:29;-1:-1:-1;;;10907:2:23;10892:18;;10885:39;10991:4;10976:20;;10969:36;;;;10956:3;10941:19;;10605:406;1965:47:22;;;;;;;;2045:3;;2031:18;;-1:-1:-1;;;2031:18:22;;-1:-1:-1;;;;;2045:3:22;;;2031:18;;;1841:51:23;2022:31:22;;2031:13;;;;;1814:18:23;;2031::22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2051:1;2022:8;:31::i;:::-;2237:3;;2228:21;;-1:-1:-1;;;;;2237:3:22;;;:11;1445:25:23;;2228:21:22;;1433:2:23;1418:18;2228:21:22;;;;;;;1394:862;1360:896::o;3974:149:15:-;-1:-1:-1;;;;;4089:18:15;;;4063:7;4089:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3974:149::o;4564:132:0:-;-1:-1:-1;;;;;4668:12:0;;4626:7;4668:12;;;:5;:12;;;;;:21;;;4650:39;;:15;:39;:::i;10504:370:15:-;-1:-1:-1;;;;;10635:19:15;;10627:68;;;;-1:-1:-1;;;10627:68:15;;11427:2:23;10627:68:15;;;11409:21:23;11466:2;11446:18;;;11439:30;11505:34;11485:18;;;11478:62;-1:-1:-1;;;11556:18:23;;;11549:34;11600:19;;10627:68:15;11225:400:23;10627:68:15;-1:-1:-1;;;;;10713:21:15;;10705:68;;;;-1:-1:-1;;;10705:68:15;;11832:2:23;10705:68:15;;;11814:21:23;11871:2;11851:18;;;11844:30;11910:34;11890:18;;;11883:62;-1:-1:-1;;;11961:18:23;;;11954:32;12003:19;;10705:68:15;11630:398:23;10705:68:15;-1:-1:-1;;;;;10784:18:15;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10835:32;;1445:25:23;;;10835:32:15;;1418:18:23;10835:32:15;;;;;;;10504:370;;;:::o;11155:441::-;11285:24;11312:25;11322:5;11329:7;11312:9;:25::i;:::-;11285:52;;-1:-1:-1;;11351:16:15;:37;11347:243;;11432:6;11412:16;:26;;11404:68;;;;-1:-1:-1;;;11404:68:15;;12235:2:23;11404:68:15;;;12217:21:23;12274:2;12254:18;;;12247:30;12313:31;12293:18;;;12286:59;12362:18;;11404:68:15;12033:353:23;11404:68:15;11514:51;11523:5;11530:7;11558:6;11539:16;:25;11514:8;:51::i;:::-;11275:321;11155:441;;;:::o;7473:818::-;-1:-1:-1;;;;;7599:18:15;;7591:68;;;;-1:-1:-1;;;7591:68:15;;12593:2:23;7591:68:15;;;12575:21:23;12632:2;12612:18;;;12605:30;12671:34;12651:18;;;12644:62;-1:-1:-1;;;12722:18:23;;;12715:35;12767:19;;7591:68:15;12391:401:23;7591:68:15;-1:-1:-1;;;;;7677:16:15;;7669:64;;;;-1:-1:-1;;;7669:64:15;;12999:2:23;7669:64:15;;;12981:21:23;13038:2;13018:18;;;13011:30;13077:34;13057:18;;;13050:62;-1:-1:-1;;;13128:18:23;;;13121:33;13171:19;;7669:64:15;12797:399:23;7669:64:15;-1:-1:-1;;;;;7815:15:15;;7793:19;7815:15;;;:9;:15;;;;;;7848:21;;;;7840:72;;;;-1:-1:-1;;;7840:72:15;;13403:2:23;7840:72:15;;;13385:21:23;13442:2;13422:18;;;13415:30;13481:34;13461:18;;;13454:62;-1:-1:-1;;;13532:18:23;;;13525:36;13578:19;;7840:72:15;13201:402:23;7840:72:15;-1:-1:-1;;;;;7946:15:15;;;;;;;:9;:15;;;;;;7964:20;;;7946:38;;8161:13;;;;;;;;;;:23;;;;;;8210:26;;;;;;7978:6;1445:25:23;;1433:2;1418:18;;1299:177;8210:26:15;;;;;;;;8247:37;1042:524:0;9422:659:15;-1:-1:-1;;;;;9505:21:15;;9497:67;;;;-1:-1:-1;;;9497:67:15;;13810:2:23;9497:67:15;;;13792:21:23;13849:2;13829:18;;;13822:30;13888:34;13868:18;;;13861:62;-1:-1:-1;;;13939:18:23;;;13932:31;13980:19;;9497:67:15;13608:397:23;9497:67:15;-1:-1:-1;;;;;9660:18:15;;9635:22;9660:18;;;:9;:18;;;;;;9696:24;;;;9688:71;;;;-1:-1:-1;;;9688:71:15;;14212:2:23;9688:71:15;;;14194:21:23;14251:2;14231:18;;;14224:30;14290:34;14270:18;;;14263:62;-1:-1:-1;;;14341:18:23;;;14334:32;14383:19;;9688:71:15;14010:398:23;9688:71:15;-1:-1:-1;;;;;9793:18:15;;;;;;:9;:18;;;;;;;;9814:23;;;9793:44;;9930:12;:22;;;;;;;9978:37;1445:25:23;;;9793:18:15;;;9978:37;;1418:18:23;9978:37:15;;;;;;;1082:484:0;;1042:524;:::o;8567:535:15:-;-1:-1:-1;;;;;8650:21:15;;8642:65;;;;-1:-1:-1;;;8642:65:15;;14615:2:23;8642:65:15;;;14597:21:23;14654:2;14634:18;;;14627:30;14693:33;14673:18;;;14666:61;14744:18;;8642:65:15;14413:355:23;8642:65:15;8794:6;8778:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8946:18:15;;;;;;:9;:18;;;;;;;;:28;;;;;;8999:37;1445:25:23;;;8999:37:15;;1418:18:23;8999:37:15;;;;;;;9047:48;8567:535;;:::o;2557:366:0:-;-1:-1:-1;;;;;2648:12:0;;2606:4;2648:12;;;:5;:12;;;;;;;;2631:30;;;;;;;;;;;;;;;;;;;;;;2606:4;;2631:30;;:16;:30::i;:::-;-1:-1:-1;;;;;2671:12:0;;;;;;:5;:12;;;;;;2695:15;2671:21;;;:39;2720:31;;;2777:24;2622:39;;-1:-1:-1;2671:12:0;2622:39;;2671:12;2777:24;2671:12;2777:24;2622:39;2671:12;2777:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2761:40;;;2819:4;2811:31;;;;-1:-1:-1;;;2811:31:0;;14975:2:23;2811:31:0;;;14957:21:23;15014:2;14994:18;;;14987:30;-1:-1:-1;;;15033:18:23;;;15026:44;15087:18;;2811:31:0;14773:338:23;2811:31:0;2887:1;2879:16;2890:4;2879:16;;;;1272:14:23;1265:22;1247:41;;1235:2;1220:18;;1107:187;2879:16:0;;;;;;;;-1:-1:-1;2912:4:0;;2557:366;-1:-1:-1;;;2557:366:0:o;5202:262:1:-;5264:1;5259;:6;5255:203;;5286:41;;;;;15318:2:23;15300:21;;;15357:2;15337:18;;;15330:30;15396:34;15391:2;15376:18;;15369:62;-1:-1:-1;;;15462:2:23;15447:18;;15440:32;15504:3;15489:19;;15116:398;5286:41:1;;;;;;;;5346:31;;;15731:21:23;;;15788:2;15768:18;;;15761:30;-1:-1:-1;;;15822:2:23;15807:18;;15800:40;15907:4;15892:20;;15885:36;;;5346:31:1;;-1:-1:-1;;;;;;;;;;;5346:31:1;;;;15872:3:23;5346:31:1;;;5396;;;16144:21:23;;;16201:2;16181:18;;;16174:30;-1:-1:-1;;;16235:2:23;16220:18;;16213:40;16320:4;16305:20;;16298:36;;;5396:31:1;;-1:-1:-1;;;;;;;;;;;5396:31:1;;;;16285:3:23;5396:31:1;;;5441:6;:4;:6::i;3190:446:0:-;3272:11;3338:1;3321:5;:14;;;3303:15;:32;;;;:::i;:::-;:36;3295:52;;;;-1:-1:-1;;;3295:52:0;;16547:2:23;3295:52:0;;;16529:21:23;16586:1;16566:18;;;16559:29;-1:-1:-1;;;16604:18:23;;;16597:33;16647:18;;3295:52:0;16345:326:23;3295:52:0;3379:13;3413:5;:14;;;3395:15;:32;;;;:::i;:::-;3379:48;;3437:15;3455:30;3476:8;3455:20;:30::i;:::-;3437:48;;3621:8;3597;466:9;3542:10;3519:5;:20;;;:33;;;;:::i;:::-;3518:59;;;;:::i;:::-;3517:88;;;;:::i;:::-;3516:113;;;;:::i;:::-;3495:134;3190:446;-1:-1:-1;;;;3190:446:0:o;17530:93:5:-;17585:7;;17593:22;17611:4;17593:15;:22;:::i;:::-;17585:31;;;;;;;;;;;;;1445:25:23;;1433:2;1418:18;;1299:177;17585:31:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17530:93;:::o;2410:424:1:-;2990:42;2978:55;3059:16;2445:359;;2645:67;;;1671:64;2645:67;;;16878:51:23;;;-1:-1:-1;;;16945:18:23;;;16938:34;;;;2705:4:1;16988:18:23;;;16981:34;2482:11:1;;1671:64;2579:43;;16851:18:23;;2645:67:1;;;-1:-1:-1;;2645:67:1;;;;;;;;;;2534:196;;;2645:67;2534:196;;:::i;:::-;;;;-1:-1:-1;;2534:196:1;;;;;;;;;;2499:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2445:359:1;2813:7;:14;;-1:-1:-1;;2813:14:1;;;;;2410:424::o;3732:575:0:-;3850:9;:16;3815:15;;3842:47;;;;-1:-1:-1;;;3842:47:0;;17228:2:23;3842:47:0;;;17210:21:23;17267:2;17247:18;;;17240:30;-1:-1:-1;;;17286:18:23;;;17279:44;17340:18;;3842:47:0;17026:338:23;3842:47:0;3921:15;3939:19;3951:7;3939:9;:19;:::i;:::-;3990:9;:16;3921:37;;-1:-1:-1;3976:30:0;;3968:58;;;;-1:-1:-1;;;3968:58:0;;17571:2:23;3968:58:0;;;17553:21:23;17610:2;17590:18;;;17583:30;-1:-1:-1;;;17629:18:23;;;17622:45;17684:18;;3968:58:0;17369:339:23;3968:58:0;4071:9;:16;4036:11;;;4106:29;4125:10;4071:16;4106:29;:::i;:::-;4097:38;;4150:6;4145:85;4166:6;4158:5;4162:1;4158;:5;:::i;:::-;:14;4145:85;;;4203:9;4213:5;4217:1;4213;:5;:::i;:::-;4203:16;;;;;;;;:::i;:::-;;;;;;;;;4193:26;;;;;:::i;:::-;;-1:-1:-1;4174:3:0;;;:::i;:::-;;;4145:85;;;-1:-1:-1;4289:10:0;4255:30;466:9;4255:6;:30;:::i;:::-;4254:45;;;;:::i;:::-;4240:60;3732:575;-1:-1:-1;;;;;;3732:575:0:o;-1:-1:-1:-;;;;;;;;:::o;14:250:23:-;99:1;109:113;123:6;120:1;117:13;109:113;;;199:11;;;193:18;180:11;;;173:39;145:2;138:10;109:113;;;-1:-1:-1;;256:1:23;238:16;;231:27;14:250::o;269:396::-;418:2;407:9;400:21;381:4;450:6;444:13;493:6;488:2;477:9;473:18;466:34;509:79;581:6;576:2;565:9;561:18;556:2;548:6;544:15;509:79;:::i;:::-;649:2;628:15;-1:-1:-1;;624:29:23;609:45;;;;656:2;605:54;;269:396;-1:-1:-1;;269:396:23:o;670:173::-;738:20;;-1:-1:-1;;;;;787:31:23;;777:42;;767:70;;833:1;830;823:12;848:254;916:6;924;977:2;965:9;956:7;952:23;948:32;945:52;;;993:1;990;983:12;945:52;1016:29;1035:9;1016:29;:::i;:::-;1006:39;1092:2;1077:18;;;;1064:32;;-1:-1:-1;;;848:254:23:o;1481:180::-;1540:6;1593:2;1581:9;1572:7;1568:23;1564:32;1561:52;;;1609:1;1606;1599:12;1561:52;-1:-1:-1;1632:23:23;;1481:180;-1:-1:-1;1481:180:23:o;1903:328::-;1980:6;1988;1996;2049:2;2037:9;2028:7;2024:23;2020:32;2017:52;;;2065:1;2062;2055:12;2017:52;2088:29;2107:9;2088:29;:::i;:::-;2078:39;;2136:38;2170:2;2159:9;2155:18;2136:38;:::i;:::-;2126:48;;2221:2;2210:9;2206:18;2193:32;2183:42;;1903:328;;;;;:::o;2425:186::-;2484:6;2537:2;2525:9;2516:7;2512:23;2508:32;2505:52;;;2553:1;2550;2543:12;2505:52;2576:29;2595:9;2576:29;:::i;:::-;2566:39;2425:186;-1:-1:-1;;;2425:186:23:o;2869:260::-;2937:6;2945;2998:2;2986:9;2977:7;2973:23;2969:32;2966:52;;;3014:1;3011;3004:12;2966:52;3037:29;3056:9;3037:29;:::i;:::-;3027:39;;3085:38;3119:2;3108:9;3104:18;3085:38;:::i;:::-;3075:48;;2869:260;;;;;:::o;3134:380::-;3213:1;3209:12;;;;3256;;;3277:61;;3331:4;3323:6;3319:17;3309:27;;3277:61;3384:2;3376:6;3373:14;3353:18;3350:38;3347:161;;3430:10;3425:3;3421:20;3418:1;3411:31;3465:4;3462:1;3455:15;3493:4;3490:1;3483:15;3347:161;;3134:380;;;:::o;3519:127::-;3580:10;3575:3;3571:20;3568:1;3561:31;3611:4;3608:1;3601:15;3635:4;3632:1;3625:15;3651:168;3724:9;;;3755;;3772:15;;;3766:22;;3752:37;3742:71;;3793:18;;:::i;3824:125::-;3889:9;;;3910:10;;;3907:36;;;3923:18;;:::i;5621:128::-;5688:9;;;5709:11;;;5706:37;;;5723:18;;:::i;6977:184::-;7047:6;7100:2;7088:9;7079:7;7075:23;7071:32;7068:52;;;7116:1;7113;7106:12;7068:52;-1:-1:-1;7139:16:23;;6977:184;-1:-1:-1;6977:184:23:o;8265:384::-;-1:-1:-1;;;;;;8450:33:23;;8438:46;;8507:13;;8420:3;;8529:74;8507:13;8592:1;8583:11;;8576:4;8564:17;;8529:74;:::i;:::-;8623:16;;;;8641:1;8619:24;;8265:384;-1:-1:-1;;;8265:384:23:o;8654:287::-;8783:3;8821:6;8815:13;8837:66;8896:6;8891:3;8884:4;8876:6;8872:17;8837:66;:::i;:::-;8919:16;;;;;8654:287;-1:-1:-1;;8654:287:23:o;8946:277::-;9013:6;9066:2;9054:9;9045:7;9041:23;9037:32;9034:52;;;9082:1;9079;9072:12;9034:52;9114:9;9108:16;9167:5;9160:13;9153:21;9146:5;9143:32;9133:60;;9189:1;9186;9179:12;9420:135;9459:3;9480:17;;;9477:43;;9500:18;;:::i;:::-;-1:-1:-1;9547:1:23;9536:13;;9420:135::o;9970:217::-;10010:1;10036;10026:132;;10080:10;10075:3;10071:20;10068:1;10061:31;10115:4;10112:1;10105:15;10143:4;10140:1;10133:15;10026:132;-1:-1:-1;10172:9:23;;9970:217::o;17713:127::-;17774:10;17769:3;17765:20;17762:1;17755:31;17805:4;17802:1;17795:15;17829:4;17826:1;17819:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "DECIMALS_PRESERVATION()": "c52a33b7",
    "IS_TEST()": "fa7626d4",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "claim()": "4e71d92d",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "displayReward(address)": "a38abb82",
    "displayStakeTime(address)": "e89768d3",
    "failed()": "ba414fa6",
    "increaseAllowance(address,uint256)": "39509351",
    "name()": "06fdde03",
    "openShangai()": "877a10bb",
    "pushWeekReward(uint256)": "b3839936",
    "setUp()": "0a9254e4",
    "stake()": "3a4b66f1",
    "staking(uint256)": "1dbb2a22",
    "symbol()": "95d89b41",
    "testStaking()": "5b86570e",
    "testUnstaking()": "dd08f0a6",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "unstake(uint256)": "2e17de78",
    "users(address)": "a87430ba",
    "weeklyAPR(uint256)": "9d9ed8c3"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_numOfWeeks\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_averageAPR\",\"type\":\"uint256\"}],\"name\":\"AverageAPR\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_sent\",\"type\":\"bool\"}],\"name\":\"Claimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DECIMALS_PRESERVATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"claimed\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"displayReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"displayStakeTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"st\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openShangai\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_weekReward\",\"type\":\"uint256\"}],\"name\":\"pushWeekReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"staking\",\"outputs\":[{\"internalType\":\"contract LiquidStaking\",\"name\":\"_ls\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testStaking\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testUnstaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"users\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalUserStake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"weeklyAPR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"pushWeekReward(uint256)\":{\"details\":\"SHOULD be multiplied by 100 to preserve decimal points\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/foundry/LiquidStaking.t.sol\":\"LiquidStakingTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":contracts/=contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/LiquidStaking.sol\":{\"keccak256\":\"0xa80b310bad88d09706496fd0ae2a6bbe2375cc5688b9fac462b0d4baca585f4c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b676658d20463ee18bfbc6e99d2178a8479909d155a58ef6326faebfef374ad7\",\"dweb:/ipfs/QmasnEW96V8UhrQWhaTp7qorcTHX271hqW6f92Pc8cteu6\"]},\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5\",\"dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x7f6016716c0c6f49e8163af625290c7ef270a045d9b82be04e269035726d3213\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd050537b58640f8545b319928ee66bef9649d1ebd68a3afa1d28a1ce8cea3dd\",\"dweb:/ipfs/QmbBVxERnZ2ciQuRuZ45czd2DRgouCLEhibLWtC2CrH2j4\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x9d53fb0317c888ed0ef4a8476883d4304f5e7e6fa0161d84d18fa27a63875524\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9638e9a042f5b7695953ea394072f90b814ac98312e447f45c4f2f6cdb22c3ec\",\"dweb:/ipfs/QmPvKu8hyzB2og54Lecmb2DvEiAgM9o5UC2gGgRQJ42PQw\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0xd9f9791f56c2afcd841237417d5a55fa8b69de2c1b528ddbfc7d7823fe136606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f66271850d38488984ec1e38aeb57df1cda53538b2ddd19e2164c767792905f0\",\"dweb:/ipfs/QmetNJMTfgJ7SCNMwfLrZEwnL3xdNaBY5vMiqrRrUWjjes\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xcf17bed19a42d40b15e584cfc57b1cef2b2b0e55d812f6740afe2c5c4bf801d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78e8f19f8b8b6107a39d892d073cfeb8872cce4d5c8e7957d29941e092e16fea\",\"dweb:/ipfs/QmYQfx7UYDjSx77d8WmbveFkXK6AyrUfYUdxvufGLbVPSm\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x113bce4d6d0fe7c4e1e3bf2760ba21c075448660a8dae6003f27b9ff86890612\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c8a169ea47398b475696e66d07e354d9997680b5f954418caeeaec5427a131f\",\"dweb:/ipfs/QmSTK6XmjgYZ2CCGZ87AVTowNL3UWfRvqhT6DTbZoKyJzz\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xb31c4ee03d05c6202f6e354245ac3ab883d954f9f36074902089e1b3e645273d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bd98bde50b840b8d7d5cebf818176b9f219345078ed5d3bd0071f035efb2e3\",\"dweb:/ipfs/QmPYC7FZvCWCPF2qWg6TXXTTPGEdnT4y5nebPn1AoZ1H4p\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0xc3222299fd637498c81ab5c8e15c9327289d3708fb8a7063dd10a55a8813c9cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b6f5f818e75e8ae5a67b58cff9b351dd790a72d0a5332fb6f425a3561801b6cc\",\"dweb:/ipfs/QmXJEPtMM1AzwCh6u1o1wL2xdi1qRyxsTLt1eVgeC8Y1QH\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0xb7004fe1ceab4a20ae13baec8732a5414b28d5ddb06f9f4184b49c1fc1d61521\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a60b5d84bd7d7e455f4a1ca1d260f6b50c419e4c4e7196ef32fd77d0f480d51\",\"dweb:/ipfs/QmYwRMAYYsQuvvM4mnagYs8Zhqm5VXicXmxoqEvkiUzQSd\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xe4913fabc9dbebe2ebb4ba4eaf629380a71b88b255fabc05492990bfa3b185bc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c1989ae3326aafbbf80f75036869d5ea3c752614dfce7df17ce0912a7a16dbb7\",\"dweb:/ipfs/QmSQju3J4cHLZeVsnWk53it94W2N243mvbyx42hhV5BxED\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88\",\"dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"test/foundry/LiquidStaking.t.sol\":{\"keccak256\":\"0x0c2f350a1bd1b3e4167d21d671b1f2fa353b85278d97f4b3e799bfab802cfeda\",\"license\":\"SEE LICENSE IN LICENSE\",\"urls\":[\"bzz-raw://d90ea68a0c0366b86312e41f194ac19c26ca2889a755730650cd50914a24e880\",\"dweb:/ipfs/QmSqzWvJH5Tw1u4cfzS7HUgdFVYTNLgKsxnGMeWfkx456f\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_numOfWeeks",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_averageAPR",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AverageAPR",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "_sent",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Claimed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DECIMALS_PRESERVATION",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claim",
          "outputs": [
            {
              "internalType": "bool",
              "name": "claimed",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "displayReward",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "reward",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "displayStakeTime",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "st",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "openShangai"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_weekReward",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pushWeekReward"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "stake"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "staking",
          "outputs": [
            {
              "internalType": "contract LiquidStaking",
              "name": "_ls",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "testStaking"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testUnstaking"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unstake"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "users",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "totalUserStake",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "initTime",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "weeklyAPR",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "pushWeekReward(uint256)": {
            "details": "SHOULD be multiplied by 100 to preserve decimal points"
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":contracts/=contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/foundry/LiquidStaking.t.sol": "LiquidStakingTest"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/LiquidStaking.sol": {
        "keccak256": "0xa80b310bad88d09706496fd0ae2a6bbe2375cc5688b9fac462b0d4baca585f4c",
        "urls": [
          "bzz-raw://b676658d20463ee18bfbc6e99d2178a8479909d155a58ef6326faebfef374ad7",
          "dweb:/ipfs/QmasnEW96V8UhrQWhaTp7qorcTHX271hqW6f92Pc8cteu6"
        ],
        "license": "MIT"
      },
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54",
        "urls": [
          "bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5",
          "dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x7f6016716c0c6f49e8163af625290c7ef270a045d9b82be04e269035726d3213",
        "urls": [
          "bzz-raw://bd050537b58640f8545b319928ee66bef9649d1ebd68a3afa1d28a1ce8cea3dd",
          "dweb:/ipfs/QmbBVxERnZ2ciQuRuZ45czd2DRgouCLEhibLWtC2CrH2j4"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x9d53fb0317c888ed0ef4a8476883d4304f5e7e6fa0161d84d18fa27a63875524",
        "urls": [
          "bzz-raw://9638e9a042f5b7695953ea394072f90b814ac98312e447f45c4f2f6cdb22c3ec",
          "dweb:/ipfs/QmPvKu8hyzB2og54Lecmb2DvEiAgM9o5UC2gGgRQJ42PQw"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0xd9f9791f56c2afcd841237417d5a55fa8b69de2c1b528ddbfc7d7823fe136606",
        "urls": [
          "bzz-raw://f66271850d38488984ec1e38aeb57df1cda53538b2ddd19e2164c767792905f0",
          "dweb:/ipfs/QmetNJMTfgJ7SCNMwfLrZEwnL3xdNaBY5vMiqrRrUWjjes"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0xcf17bed19a42d40b15e584cfc57b1cef2b2b0e55d812f6740afe2c5c4bf801d3",
        "urls": [
          "bzz-raw://78e8f19f8b8b6107a39d892d073cfeb8872cce4d5c8e7957d29941e092e16fea",
          "dweb:/ipfs/QmYQfx7UYDjSx77d8WmbveFkXK6AyrUfYUdxvufGLbVPSm"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x113bce4d6d0fe7c4e1e3bf2760ba21c075448660a8dae6003f27b9ff86890612",
        "urls": [
          "bzz-raw://8c8a169ea47398b475696e66d07e354d9997680b5f954418caeeaec5427a131f",
          "dweb:/ipfs/QmSTK6XmjgYZ2CCGZ87AVTowNL3UWfRvqhT6DTbZoKyJzz"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xb31c4ee03d05c6202f6e354245ac3ab883d954f9f36074902089e1b3e645273d",
        "urls": [
          "bzz-raw://33bd98bde50b840b8d7d5cebf818176b9f219345078ed5d3bd0071f035efb2e3",
          "dweb:/ipfs/QmPYC7FZvCWCPF2qWg6TXXTTPGEdnT4y5nebPn1AoZ1H4p"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0xc3222299fd637498c81ab5c8e15c9327289d3708fb8a7063dd10a55a8813c9cf",
        "urls": [
          "bzz-raw://b6f5f818e75e8ae5a67b58cff9b351dd790a72d0a5332fb6f425a3561801b6cc",
          "dweb:/ipfs/QmXJEPtMM1AzwCh6u1o1wL2xdi1qRyxsTLt1eVgeC8Y1QH"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0xb7004fe1ceab4a20ae13baec8732a5414b28d5ddb06f9f4184b49c1fc1d61521",
        "urls": [
          "bzz-raw://5a60b5d84bd7d7e455f4a1ca1d260f6b50c419e4c4e7196ef32fd77d0f480d51",
          "dweb:/ipfs/QmYwRMAYYsQuvvM4mnagYs8Zhqm5VXicXmxoqEvkiUzQSd"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0xe4913fabc9dbebe2ebb4ba4eaf629380a71b88b255fabc05492990bfa3b185bc",
        "urls": [
          "bzz-raw://c1989ae3326aafbbf80f75036869d5ea3c752614dfce7df17ce0912a7a16dbb7",
          "dweb:/ipfs/QmSQju3J4cHLZeVsnWk53it94W2N243mvbyx42hhV5BxED"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46",
        "urls": [
          "bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88",
          "dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d",
        "urls": [
          "bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d",
          "dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238",
        "urls": [
          "bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6",
          "dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1",
        "urls": [
          "bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269",
          "dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "test/foundry/LiquidStaking.t.sol": {
        "keccak256": "0x0c2f350a1bd1b3e4167d21d671b1f2fa353b85278d97f4b3e799bfab802cfeda",
        "urls": [
          "bzz-raw://d90ea68a0c0366b86312e41f194ac19c26ca2889a755730650cd50914a24e880",
          "dweb:/ipfs/QmSqzWvJH5Tw1u4cfzS7HUgdFVYTNLgKsxnGMeWfkx456f"
        ],
        "license": "SEE LICENSE IN LICENSE"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/foundry/LiquidStaking.t.sol",
    "id": 27478,
    "exportedSymbols": {
      "Address": [
        27212
      ],
      "Context": [
        27234
      ],
      "DSTest": [
        2186
      ],
      "ERC20": [
        26462
      ],
      "IERC20": [
        26540
      ],
      "IERC20Metadata": [
        26565
      ],
      "IERC20Permit": [
        26601
      ],
      "LiquidStaking": [
        399
      ],
      "LiquidStakingTest": [
        27477
      ],
      "SafeERC20": [
        26882
      ],
      "StdAssertions": [
        3071
      ],
      "StdChains": [
        3607
      ],
      "StdCheats": [
        5544
      ],
      "StdStorage": [
        6451
      ],
      "StdUtils": [
        8516
      ],
      "Test": [
        8558
      ],
      "TestBase": [
        2243
      ],
      "Vm": [
        9715
      ],
      "console": [
        17779
      ],
      "console2": [
        25875
      ],
      "stdError": [
        5610
      ],
      "stdJson": [
        6277
      ],
      "stdMath": [
        6419
      ],
      "stdStorage": [
        7885
      ]
    },
    "nodeType": "SourceUnit",
    "src": "52:2211:22",
    "nodes": [
      {
        "id": 27236,
        "nodeType": "PragmaDirective",
        "src": "52:23:22",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 27237,
        "nodeType": "ImportDirective",
        "src": "77:28:22",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 27478,
        "sourceUnit": 8559,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 27238,
        "nodeType": "ImportDirective",
        "src": "106:37:22",
        "nodes": [],
        "absolutePath": "contracts/LiquidStaking.sol",
        "file": "contracts/LiquidStaking.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 27478,
        "sourceUnit": 400,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 27477,
        "nodeType": "ContractDefinition",
        "src": "145:2118:22",
        "nodes": [
          {
            "id": 27245,
            "nodeType": "VariableDeclaration",
            "src": "202:16:22",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "ls",
            "nameLocation": "216:2:22",
            "scope": 27477,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_LiquidStaking_$399",
              "typeString": "contract LiquidStaking"
            },
            "typeName": {
              "id": 27244,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 27243,
                "name": "LiquidStaking",
                "nameLocations": [
                  "202:13:22"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 399,
                "src": "202:13:22"
              },
              "referencedDeclaration": 399,
              "src": "202:13:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LiquidStaking_$399",
                "typeString": "contract LiquidStaking"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 27250,
            "nodeType": "VariableDeclaration",
            "src": "224:29:22",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "bob",
            "nameLocation": "232:3:22",
            "scope": 27477,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 27246,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "224:7:22",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "626f62",
                  "id": 27248,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "247:5:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_38e47a7b719dce63662aeaf43440326f551b8a7ee198cee35cb5d517f2d296a2",
                    "typeString": "literal_string \"bob\""
                  },
                  "value": "bob"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_38e47a7b719dce63662aeaf43440326f551b8a7ee198cee35cb5d517f2d296a2",
                    "typeString": "literal_string \"bob\""
                  }
                ],
                "id": 27247,
                "name": "makeAddr",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 5025,
                "src": "238:8:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_address_$",
                  "typeString": "function (string memory) returns (address)"
                }
              },
              "id": 27249,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "238:15:22",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 27255,
            "nodeType": "VariableDeclaration",
            "src": "259:33:22",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "alice",
            "nameLocation": "267:5:22",
            "scope": 27477,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 27251,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "259:7:22",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "616c696365",
                  "id": 27253,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "284:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_9c0257114eb9399a2985f8e75dad7600c5d89fe3824ffa99ec1c3eb8bf3b0501",
                    "typeString": "literal_string \"alice\""
                  },
                  "value": "alice"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_9c0257114eb9399a2985f8e75dad7600c5d89fe3824ffa99ec1c3eb8bf3b0501",
                    "typeString": "literal_string \"alice\""
                  }
                ],
                "id": 27252,
                "name": "makeAddr",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 5025,
                "src": "275:8:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_address_$",
                  "typeString": "function (string memory) returns (address)"
                }
              },
              "id": 27254,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "275:17:22",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 27260,
            "nodeType": "VariableDeclaration",
            "src": "298:29:22",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "tom",
            "nameLocation": "306:3:22",
            "scope": 27477,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 27256,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "298:7:22",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "746f6d",
                  "id": 27258,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "321:5:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_d23b00fcb8e0ebd93983a99e8ff85b08f8a67686540afd945aa825219b012b22",
                    "typeString": "literal_string \"tom\""
                  },
                  "value": "tom"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_d23b00fcb8e0ebd93983a99e8ff85b08f8a67686540afd945aa825219b012b22",
                    "typeString": "literal_string \"tom\""
                  }
                ],
                "id": 27257,
                "name": "makeAddr",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 5025,
                "src": "312:8:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_address_$",
                  "typeString": "function (string memory) returns (address)"
                }
              },
              "id": 27259,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "312:15:22",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 27265,
            "nodeType": "VariableDeclaration",
            "src": "333:31:22",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "matt",
            "nameLocation": "341:4:22",
            "scope": 27477,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 27261,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "333:7:22",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "6d617474",
                  "id": 27263,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "357:6:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_e18b7f775193bf7b8490559043e6426ab4ef3b58b1d50dfcf74500a615acc870",
                    "typeString": "literal_string \"matt\""
                  },
                  "value": "matt"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_e18b7f775193bf7b8490559043e6426ab4ef3b58b1d50dfcf74500a615acc870",
                    "typeString": "literal_string \"matt\""
                  }
                ],
                "id": 27262,
                "name": "makeAddr",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 5025,
                "src": "348:8:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_address_$",
                  "typeString": "function (string memory) returns (address)"
                }
              },
              "id": 27264,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "348:16:22",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 27276,
            "nodeType": "FunctionDefinition",
            "src": "371:219:22",
            "nodes": [],
            "body": {
              "id": 27275,
              "nodeType": "Block",
              "src": "397:193:22",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 27273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 27268,
                      "name": "ls",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27245,
                      "src": "407:2:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LiquidStaking_$399",
                        "typeString": "contract LiquidStaking"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 27271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "412:17:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_LiquidStaking_$399_$",
                          "typeString": "function () returns (contract LiquidStaking)"
                        },
                        "typeName": {
                          "id": 27270,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 27269,
                            "name": "LiquidStaking",
                            "nameLocations": [
                              "416:13:22"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 399,
                            "src": "416:13:22"
                          },
                          "referencedDeclaration": 399,
                          "src": "416:13:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LiquidStaking_$399",
                            "typeString": "contract LiquidStaking"
                          }
                        }
                      },
                      "id": 27272,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "412:19:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LiquidStaking_$399",
                        "typeString": "contract LiquidStaking"
                      }
                    },
                    "src": "407:24:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LiquidStaking_$399",
                      "typeString": "contract LiquidStaking"
                    }
                  },
                  "id": 27274,
                  "nodeType": "ExpressionStatement",
                  "src": "407:24:22"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "380:5:22",
            "parameters": {
              "id": 27266,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "385:2:22"
            },
            "returnParameters": {
              "id": 27267,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "397:0:22"
            },
            "scope": 27477,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 27333,
            "nodeType": "FunctionDefinition",
            "src": "596:358:22",
            "nodes": [],
            "body": {
              "id": 27332,
              "nodeType": "Block",
              "src": "661:293:22",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 27288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 27284,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27278,
                      "src": "671:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 27287,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 27285,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27278,
                        "src": "681:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 27286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "691:7:22",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      "src": "681:17:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "671:27:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 27289,
                  "nodeType": "ExpressionStatement",
                  "src": "671:27:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 27293,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27250,
                        "src": "716:3:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 27296,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 27294,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27278,
                              "src": "722:7:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 27295,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "732:7:22",
                              "subdenomination": "ether",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "value": "1"
                            },
                            "src": "722:17:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 27297,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "721:19:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 27290,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2236,
                        "src": "708:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$9715",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 27292,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "711:4:22",
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9467,
                      "src": "708:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 27298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "708:33:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27299,
                  "nodeType": "ExpressionStatement",
                  "src": "708:33:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 27303,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27250,
                        "src": "760:3:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 27300,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2236,
                        "src": "751:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$9715",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 27302,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "754:5:22",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9438,
                      "src": "751:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 27304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "751:13:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27305,
                  "nodeType": "ExpressionStatement",
                  "src": "751:13:22"
                },
                {
                  "expression": {
                    "id": 27308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 27306,
                      "name": "_ls",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27282,
                      "src": "774:3:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LiquidStaking_$399",
                        "typeString": "contract LiquidStaking"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 27307,
                      "name": "ls",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27245,
                      "src": "780:2:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LiquidStaking_$399",
                        "typeString": "contract LiquidStaking"
                      }
                    },
                    "src": "774:8:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LiquidStaking_$399",
                      "typeString": "contract LiquidStaking"
                    }
                  },
                  "id": 27309,
                  "nodeType": "ExpressionStatement",
                  "src": "774:8:22"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 27310,
                          "name": "_ls",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27282,
                          "src": "792:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LiquidStaking_$399",
                            "typeString": "contract LiquidStaking"
                          }
                        },
                        "id": 27312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "796:5:22",
                        "memberName": "stake",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 150,
                        "src": "792:9:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 27314,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "3130",
                          "id": 27313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "809:8:22",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000"
                          },
                          "value": "10"
                        }
                      ],
                      "src": "792:26:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 27315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "792:28:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27316,
                  "nodeType": "ExpressionStatement",
                  "src": "792:28:22"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "626f6242616c616e6365",
                        "id": 27318,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "850:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e6a5599721c6d6e410e2263792b3a5d3d9cfbcf58957cb6f2b8a796ef69fa2e4",
                          "typeString": "literal_string \"bobBalance\""
                        },
                        "value": "bobBalance"
                      },
                      {
                        "expression": {
                          "id": 27319,
                          "name": "bob",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27250,
                          "src": "864:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 27320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "868:7:22",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "864:11:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e6a5599721c6d6e410e2263792b3a5d3d9cfbcf58957cb6f2b8a796ef69fa2e4",
                          "typeString": "literal_string \"bobBalance\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 27317,
                      "name": "log_named_uint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 473,
                      "src": "835:14:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256)"
                      }
                    },
                    "id": 27321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "835:41:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27322,
                  "nodeType": "EmitStatement",
                  "src": "830:46:22"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "636f6e747261637442616c616e6365",
                        "id": 27324,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "906:17:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4e68c122d955a5a30264ae7ea06b09f63f4a89b8348b29569c0f8f911cf363b6",
                          "typeString": "literal_string \"contractBalance\""
                        },
                        "value": "contractBalance"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 27327,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "933:4:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LiquidStakingTest_$27477",
                                "typeString": "contract LiquidStakingTest"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_LiquidStakingTest_$27477",
                                "typeString": "contract LiquidStakingTest"
                              }
                            ],
                            "id": 27326,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "925:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 27325,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "925:7:22",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 27328,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "925:13:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 27329,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "939:7:22",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "925:21:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_4e68c122d955a5a30264ae7ea06b09f63f4a89b8348b29569c0f8f911cf363b6",
                          "typeString": "literal_string \"contractBalance\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 27323,
                      "name": "log_named_uint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 473,
                      "src": "891:14:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256)"
                      }
                    },
                    "id": 27330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "891:56:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27331,
                  "nodeType": "EmitStatement",
                  "src": "886:61:22"
                }
              ]
            },
            "functionSelector": "1dbb2a22",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "staking",
            "nameLocation": "605:7:22",
            "parameters": {
              "id": 27279,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27278,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "618:7:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 27333,
                  "src": "613:12:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 27277,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "613:4:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "612:14:22"
            },
            "returnParameters": {
              "id": 27283,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27282,
                  "mutability": "mutable",
                  "name": "_ls",
                  "nameLocation": "657:3:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 27333,
                  "src": "643:17:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_LiquidStaking_$399",
                    "typeString": "contract LiquidStaking"
                  },
                  "typeName": {
                    "id": 27281,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 27280,
                      "name": "LiquidStaking",
                      "nameLocations": [
                        "643:13:22"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 399,
                      "src": "643:13:22"
                    },
                    "referencedDeclaration": 399,
                    "src": "643:13:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LiquidStaking_$399",
                      "typeString": "contract LiquidStaking"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "642:19:22"
            },
            "scope": 27477,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 27360,
            "nodeType": "FunctionDefinition",
            "src": "960:197:22",
            "nodes": [],
            "body": {
              "id": 27359,
              "nodeType": "Block",
              "src": "997:160:22",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    27338
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 27338,
                      "mutability": "mutable",
                      "name": "_ls",
                      "nameLocation": "1021:3:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 27359,
                      "src": "1007:17:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LiquidStaking_$399",
                        "typeString": "contract LiquidStaking"
                      },
                      "typeName": {
                        "id": 27337,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 27336,
                          "name": "LiquidStaking",
                          "nameLocations": [
                            "1007:13:22"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 399,
                          "src": "1007:13:22"
                        },
                        "referencedDeclaration": 399,
                        "src": "1007:13:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LiquidStaking_$399",
                          "typeString": "contract LiquidStaking"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 27342,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "3130",
                        "id": 27340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1035:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "id": 27339,
                      "name": "staking",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27333,
                      "src": "1027:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_contract$_LiquidStaking_$399_$",
                        "typeString": "function (uint256) returns (contract LiquidStaking)"
                      }
                    },
                    "id": 27341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1027:11:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LiquidStaking_$399",
                      "typeString": "contract LiquidStaking"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1007:31:22"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "626f6242616c616e636532",
                        "id": 27344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1068:13:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_759d0f5a8f468aacf8f45b4f01f3402615f477270d383f7cf700676792953924",
                          "typeString": "literal_string \"bobBalance2\""
                        },
                        "value": "bobBalance2"
                      },
                      {
                        "arguments": [
                          {
                            "id": 27347,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27250,
                            "src": "1097:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 27345,
                            "name": "_ls",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27338,
                            "src": "1083:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidStaking_$399",
                              "typeString": "contract LiquidStaking"
                            }
                          },
                          "id": 27346,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1087:9:22",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25974,
                          "src": "1083:13:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 27348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1083:18:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_759d0f5a8f468aacf8f45b4f01f3402615f477270d383f7cf700676792953924",
                          "typeString": "literal_string \"bobBalance2\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 27343,
                      "name": "log_named_uint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 473,
                      "src": "1053:14:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256)"
                      }
                    },
                    "id": 27349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1053:49:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27350,
                  "nodeType": "EmitStatement",
                  "src": "1048:54:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 27354,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27250,
                            "src": "1135:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 27352,
                            "name": "_ls",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27338,
                            "src": "1121:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidStaking_$399",
                              "typeString": "contract LiquidStaking"
                            }
                          },
                          "id": 27353,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1125:9:22",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25974,
                          "src": "1121:13:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 27355,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1121:18:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 27356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1141:8:22",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "id": 27351,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2374,
                        2399,
                        2412,
                        2428,
                        2470,
                        2512,
                        2554,
                        2591,
                        2628,
                        2665,
                        720,
                        745,
                        775,
                        800,
                        859,
                        884,
                        914,
                        939,
                        2039,
                        2074
                      ],
                      "referencedDeclaration": 914,
                      "src": "1112:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 27357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1112:38:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27358,
                  "nodeType": "ExpressionStatement",
                  "src": "1112:38:22"
                }
              ]
            },
            "functionSelector": "5b86570e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testStaking",
            "nameLocation": "969:11:22",
            "parameters": {
              "id": 27334,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "980:2:22"
            },
            "returnParameters": {
              "id": 27335,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "997:0:22"
            },
            "scope": 27477,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 27476,
            "nodeType": "FunctionDefinition",
            "src": "1360:896:22",
            "nodes": [],
            "body": {
              "id": 27475,
              "nodeType": "Block",
              "src": "1394:862:22",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    27365
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 27365,
                      "mutability": "mutable",
                      "name": "_ls",
                      "nameLocation": "1418:3:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 27475,
                      "src": "1404:17:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LiquidStaking_$399",
                        "typeString": "contract LiquidStaking"
                      },
                      "typeName": {
                        "id": 27364,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 27363,
                          "name": "LiquidStaking",
                          "nameLocations": [
                            "1404:13:22"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 399,
                          "src": "1404:13:22"
                        },
                        "referencedDeclaration": 399,
                        "src": "1404:13:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LiquidStaking_$399",
                          "typeString": "contract LiquidStaking"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 27369,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "3130",
                        "id": 27367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1432:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "id": 27366,
                      "name": "staking",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27333,
                      "src": "1424:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_contract$_LiquidStaking_$399_$",
                        "typeString": "function (uint256) returns (contract LiquidStaking)"
                      }
                    },
                    "id": 27368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1424:11:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LiquidStaking_$399",
                      "typeString": "contract LiquidStaking"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1404:31:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 27373,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27250,
                            "src": "1468:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 27371,
                            "name": "_ls",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27365,
                            "src": "1454:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidStaking_$399",
                              "typeString": "contract LiquidStaking"
                            }
                          },
                          "id": 27372,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1458:9:22",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25974,
                          "src": "1454:13:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 27374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1454:18:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 27375,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1474:8:22",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "id": 27370,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2374,
                        2399,
                        2412,
                        2428,
                        2470,
                        2512,
                        2554,
                        2591,
                        2628,
                        2665,
                        720,
                        745,
                        775,
                        800,
                        859,
                        884,
                        914,
                        939,
                        2039,
                        2074
                      ],
                      "referencedDeclaration": 914,
                      "src": "1445:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 27376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1445:38:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27377,
                  "nodeType": "ExpressionStatement",
                  "src": "1445:38:22"
                },
                {
                  "body": {
                    "id": 27393,
                    "nodeType": "Block",
                    "src": "1517:47:22",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "343530",
                              "id": 27390,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1549:3:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_450_by_1",
                                "typeString": "int_const 450"
                              },
                              "value": "450"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_450_by_1",
                                "typeString": "int_const 450"
                              }
                            ],
                            "expression": {
                              "id": 27387,
                              "name": "ls",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27245,
                              "src": "1531:2:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LiquidStaking_$399",
                                "typeString": "contract LiquidStaking"
                              }
                            },
                            "id": 27389,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1534:14:22",
                            "memberName": "pushWeekReward",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 176,
                            "src": "1531:17:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) external"
                            }
                          },
                          "id": 27391,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1531:22:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 27392,
                        "nodeType": "ExpressionStatement",
                        "src": "1531:22:22"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 27383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 27381,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27379,
                      "src": "1505:1:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "3238",
                      "id": 27382,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1509:2:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_28_by_1",
                        "typeString": "int_const 28"
                      },
                      "value": "28"
                    },
                    "src": "1505:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 27394,
                  "initializationExpression": {
                    "assignments": [
                      27379
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 27379,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1502:1:22",
                        "nodeType": "VariableDeclaration",
                        "scope": 27394,
                        "src": "1497:6:22",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 27378,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1497:4:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 27380,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1497:6:22"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 27385,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "1513:3:22",
                      "subExpression": {
                        "id": 27384,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27379,
                        "src": "1515:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 27386,
                    "nodeType": "ExpressionStatement",
                    "src": "1513:3:22"
                  },
                  "nodeType": "ForStatement",
                  "src": "1493:71:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "38",
                        "id": 27396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1578:7:22",
                        "subdenomination": "weeks",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4838400_by_1",
                          "typeString": "int_const 4838400"
                        },
                        "value": "8"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_4838400_by_1",
                          "typeString": "int_const 4838400"
                        }
                      ],
                      "id": 27395,
                      "name": "skip",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5196,
                      "src": "1573:4:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 27397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1573:13:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27398,
                  "nodeType": "ExpressionStatement",
                  "src": "1573:13:22"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 27399,
                        "name": "_ls",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27365,
                        "src": "1596:3:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LiquidStaking_$399",
                          "typeString": "contract LiquidStaking"
                        }
                      },
                      "id": 27401,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1600:11:22",
                      "memberName": "openShangai",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 184,
                      "src": "1596:15:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 27402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1596:17:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27403,
                  "nodeType": "ExpressionStatement",
                  "src": "1596:17:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3230",
                        "id": 27405,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1628:8:22",
                        "subdenomination": "weeks",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_12096000_by_1",
                          "typeString": "int_const 12096000"
                        },
                        "value": "20"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_12096000_by_1",
                          "typeString": "int_const 12096000"
                        }
                      ],
                      "id": 27404,
                      "name": "skip",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5196,
                      "src": "1623:4:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 27406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1623:14:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27407,
                  "nodeType": "ExpressionStatement",
                  "src": "1623:14:22"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "6475726174696f6e",
                        "id": 27409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1667:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fcbf85119ad12140a8198f95a2f13840dacb2629cb213a98e1bf0de1c84aaae6",
                          "typeString": "literal_string \"duration\""
                        },
                        "value": "duration"
                      },
                      {
                        "arguments": [
                          {
                            "id": 27412,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27250,
                            "src": "1699:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 27410,
                            "name": "_ls",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27365,
                            "src": "1678:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidStaking_$399",
                              "typeString": "contract LiquidStaking"
                            }
                          },
                          "id": 27411,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1682:16:22",
                          "memberName": "displayStakeTime",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 398,
                          "src": "1678:20:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 27413,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1678:25:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_fcbf85119ad12140a8198f95a2f13840dacb2629cb213a98e1bf0de1c84aaae6",
                          "typeString": "literal_string \"duration\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 27408,
                      "name": "log_named_uint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 473,
                      "src": "1652:14:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256)"
                      }
                    },
                    "id": 27414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1652:52:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27415,
                  "nodeType": "EmitStatement",
                  "src": "1647:57:22"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "6e756d4f667765656b73",
                        "id": 27417,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1734:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_158b53db3958a3b22deaf471d71b285da7e439c5bd45ab8eebb7b1a54012a13b",
                          "typeString": "literal_string \"numOfweeks\""
                        },
                        "value": "numOfweeks"
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 27423,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 27420,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27250,
                              "src": "1767:3:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 27418,
                              "name": "ls",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27245,
                              "src": "1747:2:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LiquidStaking_$399",
                                "typeString": "contract LiquidStaking"
                              }
                            },
                            "id": 27419,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1750:16:22",
                            "memberName": "displayStakeTime",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 398,
                            "src": "1747:19:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 27421,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1747:24:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 27422,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1774:7:22",
                          "subdenomination": "weeks",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_604800_by_1",
                            "typeString": "int_const 604800"
                          },
                          "value": "1"
                        },
                        "src": "1747:34:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_158b53db3958a3b22deaf471d71b285da7e439c5bd45ab8eebb7b1a54012a13b",
                          "typeString": "literal_string \"numOfweeks\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 27416,
                      "name": "log_named_uint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 473,
                      "src": "1719:14:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256)"
                      }
                    },
                    "id": 27424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1719:63:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27425,
                  "nodeType": "EmitStatement",
                  "src": "1714:68:22"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "626f62526577617264",
                        "id": 27427,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1812:11:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f1a3bbb032c71b370cf50f0ef028e329424952446e5afd314ef1b072d0f982e",
                          "typeString": "literal_string \"bobReward\""
                        },
                        "value": "bobReward"
                      },
                      {
                        "arguments": [
                          {
                            "id": 27430,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27250,
                            "src": "1843:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 27428,
                            "name": "_ls",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27365,
                            "src": "1825:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidStaking_$399",
                              "typeString": "contract LiquidStaking"
                            }
                          },
                          "id": 27429,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1829:13:22",
                          "memberName": "displayReward",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 380,
                          "src": "1825:17:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 27431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1825:22:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_7f1a3bbb032c71b370cf50f0ef028e329424952446e5afd314ef1b072d0f982e",
                          "typeString": "literal_string \"bobReward\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 27426,
                      "name": "log_named_uint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 473,
                      "src": "1797:14:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256)"
                      }
                    },
                    "id": 27432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1797:51:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27433,
                  "nodeType": "EmitStatement",
                  "src": "1792:56:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 27437,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27250,
                            "src": "1881:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 27435,
                            "name": "_ls",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27365,
                            "src": "1867:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidStaking_$399",
                              "typeString": "contract LiquidStaking"
                            }
                          },
                          "id": 27436,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1871:9:22",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25974,
                          "src": "1867:13:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 27438,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1867:18:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 27439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1887:8:22",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "id": 27434,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2374,
                        2399,
                        2412,
                        2428,
                        2470,
                        2512,
                        2554,
                        2591,
                        2628,
                        2665,
                        720,
                        745,
                        775,
                        800,
                        859,
                        884,
                        914,
                        939,
                        2039,
                        2074
                      ],
                      "referencedDeclaration": 914,
                      "src": "1858:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 27440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1858:38:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27441,
                  "nodeType": "ExpressionStatement",
                  "src": "1858:38:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 27445,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27250,
                        "src": "1915:3:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 27442,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2236,
                        "src": "1906:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$9715",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 27444,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1909:5:22",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9438,
                      "src": "1906:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 27446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1906:13:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27447,
                  "nodeType": "ExpressionStatement",
                  "src": "1906:13:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3130",
                        "id": 27451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1941:8:22",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 27448,
                        "name": "_ls",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27365,
                        "src": "1929:3:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LiquidStaking_$399",
                          "typeString": "contract LiquidStaking"
                        }
                      },
                      "id": 27450,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1933:7:22",
                      "memberName": "unstake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 112,
                      "src": "1929:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 27452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1929:21:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27453,
                  "nodeType": "ExpressionStatement",
                  "src": "1929:21:22"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "626f62526577617264",
                        "id": 27455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1980:11:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f1a3bbb032c71b370cf50f0ef028e329424952446e5afd314ef1b072d0f982e",
                          "typeString": "literal_string \"bobReward\""
                        },
                        "value": "bobReward"
                      },
                      {
                        "arguments": [
                          {
                            "id": 27458,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27250,
                            "src": "2007:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 27456,
                            "name": "_ls",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27365,
                            "src": "1993:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidStaking_$399",
                              "typeString": "contract LiquidStaking"
                            }
                          },
                          "id": 27457,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1997:9:22",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25974,
                          "src": "1993:13:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 27459,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1993:18:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_7f1a3bbb032c71b370cf50f0ef028e329424952446e5afd314ef1b072d0f982e",
                          "typeString": "literal_string \"bobReward\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 27454,
                      "name": "log_named_uint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 473,
                      "src": "1965:14:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256)"
                      }
                    },
                    "id": 27460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1965:47:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27461,
                  "nodeType": "EmitStatement",
                  "src": "1960:52:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 27465,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27250,
                            "src": "2045:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 27463,
                            "name": "_ls",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27365,
                            "src": "2031:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidStaking_$399",
                              "typeString": "contract LiquidStaking"
                            }
                          },
                          "id": 27464,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2035:9:22",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25974,
                          "src": "2031:13:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 27466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2031:18:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 27467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2051:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 27462,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2374,
                        2399,
                        2412,
                        2428,
                        2470,
                        2512,
                        2554,
                        2591,
                        2628,
                        2665,
                        720,
                        745,
                        775,
                        800,
                        859,
                        884,
                        914,
                        939,
                        2039,
                        2074
                      ],
                      "referencedDeclaration": 914,
                      "src": "2022:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 27468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2022:31:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27469,
                  "nodeType": "ExpressionStatement",
                  "src": "2022:31:22"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 27471,
                          "name": "bob",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27250,
                          "src": "2237:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 27472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2241:7:22",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "2237:11:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 27470,
                      "name": "log_uint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 425,
                      "src": "2228:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 27473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2228:21:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27474,
                  "nodeType": "EmitStatement",
                  "src": "2223:26:22"
                }
              ]
            },
            "functionSelector": "dd08f0a6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testUnstaking",
            "nameLocation": "1369:13:22",
            "parameters": {
              "id": 27361,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1382:2:22"
            },
            "returnParameters": {
              "id": 27362,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1394:0:22"
            },
            "scope": 27477,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 27239,
              "name": "Test",
              "nameLocations": [
                "175:4:22"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8558,
              "src": "175:4:22"
            },
            "id": 27240,
            "nodeType": "InheritanceSpecifier",
            "src": "175:4:22"
          },
          {
            "baseName": {
              "id": 27241,
              "name": "LiquidStaking",
              "nameLocations": [
                "181:13:22"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 399,
              "src": "181:13:22"
            },
            "id": 27242,
            "nodeType": "InheritanceSpecifier",
            "src": "181:13:22"
          }
        ],
        "canonicalName": "LiquidStakingTest",
        "contractDependencies": [
          399
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          27477,
          399,
          26462,
          26565,
          26540,
          27234,
          8558,
          2243,
          2240,
          8516,
          5544,
          5155,
          3607,
          3071,
          2186
        ],
        "name": "LiquidStakingTest",
        "nameLocation": "154:17:22",
        "scope": 27478,
        "usedErrors": []
      }
    ],
    "license": "SEE LICENSE IN LICENSE"
  },
  "id": 22
}